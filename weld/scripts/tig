#!/bin/bash
set -e

WELD_UTIL="$HOME/.x20/bin/weld_util"
BASE_DIR="$HOME/codefs/local/"
BASE_DIR_ESCAPED=$(echo $BASE_DIR | sed 's/\//\\\//g')

# Remove the base dir prefix and path suffix.
SPACE=${PWD##$BASE_DIR}
SPACE=${SPACE%%/*}

if [ "$1" = "base_dir" ]; then
  echo $BASE_DIR
elif  [ "$1" = "new" ]; then
  $WELD_UTIL new --space=$2
elif [ "$1" = "space" ]; then
  echo $SPACE
elif [ "$1" = "changes" ]; then
  $WELD_UTIL changes
elif [ "$1" = "get_change" ]; then
  $WELD_UTIL --space=$SPACE get_change
elif [ "$1" = "files" ]; then
  $WELD_UTIL --space=$SPACE files
elif [ "$1" = "patch" ]; then
  $WELD_UTIL --space=$SPACE patch
elif [ "$1" = "sync" ]; then
  $WELD_UTIL --space=$SPACE sync
elif [ "$1" = "edit" ]; then
  $WELD_UTIL snapshot --space=$SPACE --update_description=true
elif [ "$1" = "snapshot" ]; then
  $WELD_UTIL snapshot --space=$SPACE
elif [ "$1" = "s" ]; then
  $WELD_UTIL snapshot --space=$SPACE
elif [ "$1" = "submit" ]; then
  $WELD_UTIL submit --space=$SPACE
elif [ "$1" = "revert" ]; then
  $WELD_UTIL revert --space=$SPACE --file=/$2
elif [ "$1" = "delete" ]; then
  $WELD_UTIL delete --space=$SPACE
elif [ "$1" = "clean" ]; then
  $WELD_UTIL clean
elif [ "$1" = "diff" ]; then
  FILE_PATH="$(cd "$(dirname "$2")"; pwd)/$(basename "$2")"
  SPACE_DIR="$BASE_DIR$SPACE"
  FILE_SUFFIX=${FILE_PATH##$SPACE_DIR}
  BASIS=$($WELD_UTIL basis --space=$SPACE)
  diff -U0 --color=never --label=a$FILE_SUFFIX --label=b$FILE_SUFFIX $BASE_DIR/../remote/$BASIS/$FILE_SUFFIX $FILE_PATH || true
else
  echo "tig: invalid command: '$1'"
  exit 1
fi

